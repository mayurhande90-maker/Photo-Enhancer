{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the PhotoCraft AI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "displayName": {
          "type": "string",
          "description": "User's display name."
        },
        "creationTimestamp": {
          "type": "string",
          "description": "Timestamp of when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "displayName",
        "creationTimestamp"
      ]
    },
    "CreditBalance": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CreditBalance",
      "type": "object",
      "description": "Represents the credit balance of a user.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:1 CreditBalance)"
        },
        "credits": {
          "type": "number",
          "description": "Number of credits the user has."
        },
        "lastUpdateTimestamp": {
          "type": "string",
          "description": "Timestamp of the last credit update.",
          "format": "date-time"
        }
      },
      "required": [
        "userId",
        "credits",
        "lastUpdateTimestamp"
      ]
    },
    "Subscription": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subscription",
      "type": "object",
      "description": "Represents a user's subscription status.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:1 Subscription)"
        },
        "planName": {
          "type": "string",
          "description": "Name of the subscription plan (e.g., 'Monthly')."
        },
        "startDate": {
          "type": "string",
          "description": "Date when the subscription started.",
          "format": "date-time"
        },
        "nextBillingDate": {
          "type": "string",
          "description": "Date of the next billing cycle.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the subscription (e.g., 'Active', 'Cancelled')."
        }
      },
      "required": [
        "userId",
        "planName",
        "startDate",
        "nextBillingDate",
        "status"
      ]
    },
    "GeneratedImage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GeneratedImage",
      "type": "object",
      "description": "Represents an image generated by the user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the generated image."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N GeneratedImage)"
        },
        "originalImageUrl": {
          "type": "string",
          "description": "URL of the original uploaded image."
        },
        "processedImageUrl": {
          "type": "string",
          "description": "URL of the processed image."
        },
        "processingType": {
          "type": "string",
          "description": "Type of processing applied (e.g., 'Enhancement', 'Background Removal')."
        },
        "generationTimestamp": {
          "type": "string",
          "description": "Timestamp of when the image was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "originalImageUrl",
        "processedImageUrl",
        "processingType",
        "generationTimestamp"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Maintained for potential future expansion.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/creditBalance",
        "definition": {
          "entityName": "CreditBalance",
          "schema": {
            "$ref": "#/backend/entities/CreditBalance"
          },
          "description": "Stores the credit balance for a user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/subscription",
        "definition": {
          "entityName": "Subscription",
          "schema": {
            "$ref": "#/backend/entities/Subscription"
          },
          "description": "Stores the subscription information for a user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/generatedImages/{imageId}",
        "definition": {
          "entityName": "GeneratedImage",
          "schema": {
            "$ref": "#/backend/entities/GeneratedImage"
          },
          "description": "Stores images generated by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to Firebase Auth UID."
            },
            {
              "name": "imageId",
              "description": "The unique identifier for the generated image."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability. User-specific data (credit balance, subscription, generated images) are stored under the `/users/{userId}` path to leverage path-based security rules. This approach, combined with denormalization of authorization data, avoids using `get()` calls in security rules, thus maintaining atomicity in operations. All data for a user is stored in collections named to describe what the collection contains. No public collections are used and all collections are user specific."
  }
}